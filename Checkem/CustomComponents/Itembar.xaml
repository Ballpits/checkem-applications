<UserControl x:Name="userControl" x:Class="Checkem.CustomComponents.Itembar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Checkem.CustomComponents"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:Checkem.Properties"
             mc:Ignorable="d" 
             d:DesignWidth="800"
             Height="70"
             Background="#02000000"
             Margin="10,5,10,5"
             Loaded="Itembar_Loaded"
             MouseDown="Itembar_MouseDown"
             >

    <UserControl.Resources>
        <ResourceDictionary>
            <Storyboard x:Key="ItembarMouseEnter">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItembarBorder" Storyboard.TargetProperty="(Border.CornerRadius)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0170000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>7</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0330000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>9</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0500000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>11</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0670000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>13</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0830000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>15</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ItembarBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                    <EasingColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ResourceKey=WhiteColor}"/>
                    <EasingColorKeyFrame KeyTime="00:00:00.0830000" Value="{StaticResource ResourceKey=PrimaryHighlightColor}"/>
                </ColorAnimationUsingKeyFrames>-->
            </Storyboard>
            <Storyboard x:Key="ItembarMouseLeave">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItembarBorder" Storyboard.TargetProperty="(Border.CornerRadius)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>15</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0170000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>13</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0330000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>11</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0500000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>9</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0670000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>7</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0830000">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ItembarBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                    <EasingColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ResourceKey=PrimaryHighlightColor}"/>
                    <EasingColorKeyFrame KeyTime="00:00:00.0830000" Value="{StaticResource ResourceKey=WhiteColor}"/>
                </ColorAnimationUsingKeyFrames>-->
            </Storyboard>
            <Storyboard x:Key="ItembarRemove">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ItembarBorder" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                    <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                    <EasingThicknessKeyFrame KeyTime="00:00:00.4000000" Value="0,50,0,50"/>
                </ThicknessAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                    <EasingThicknessKeyFrame KeyTime="00:00:00.4000000" Value="0,0,0,0"/>
                    <EasingThicknessKeyFrame KeyTime="00:00:00.7000000" Value="0,40,0,40"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ItembarClick">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                    <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
                    <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="3,3,3,3"/>
                    <EasingThicknessKeyFrame KeyTime="00:00:00.2000000" Value="0,0,0,0"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UserControl.MouseEnter" SourceName="userControl">
            <BeginStoryboard Storyboard="{StaticResource ItembarMouseEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UserControl.MouseLeave" SourceName="userControl">
            <BeginStoryboard Storyboard="{StaticResource ItembarMouseLeave}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid x:Name="grid" Margin="0,0,0,0">
        <Border x:Name="border" Background="#FFF10C0C" CornerRadius="5" Visibility="Hidden" Margin="0,0,0,0">
            <materialDesign:PackIcon Kind="TrashCanOutline" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Width="35" Height="35"/>
        </Border>

        <Border x:Name="ItembarBorder" Style="{StaticResource ItembarBorderStyle}" BorderThickness="3" BorderBrush="{DynamicResource Color.Gray}" Panel.ZIndex="1" Visibility="Visible" Margin="0,0,0,0" MouseEnter="ItembarBorder_MouseEnter" MouseLeave="ItembarBorder_MouseLeave" Background="{DynamicResource Color.White}">
            <Border.ContextMenu>
                <ContextMenu FontFamily="{StaticResource ResourceKey=Quicksand}">
                    <MenuItem Header="Mark as completed" Icon="{materialDesign:PackIcon Kind=Check, Size=18}"/>
                    <MenuItem Header="Mark as starred" Icon="{materialDesign:PackIcon Kind=StarOutline, Size=18}"/>

                    <Separator />

                    <MenuItem Header="Multi select" Icon="{materialDesign:PackIcon Kind=SelectionEllipseArrowInside, Size=18}"/>

                    <Separator />

                    <MenuItem Header="Move task to" Icon="{materialDesign:PackIcon Kind=VectorUnion, Size=18}">
                        <Grid/>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="Add tag" Icon="{materialDesign:PackIcon Kind=TagAdd, Size=18}">
                        <Grid/>
                    </MenuItem>

                    <MenuItem Header="Add sub tasks" Icon="{materialDesign:PackIcon Kind=Subtasks, Size=18}">
                        <Grid/>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="Remove" Icon="{materialDesign:PackIcon Kind=TrashOutline, Size=18}" Foreground="Red"/>
                </ContextMenu>
            </Border.ContextMenu>

            <Grid>
                <Grid x:Name="CheckboxGrid" Style="{DynamicResource CheckboxGrid}">
                    <CheckBox x:Name="checkBox" Style="{DynamicResource ItembarCheckbox}" Checked="checkBox_Checked">
                        <materialDesign:PackIcon Style="{DynamicResource ItembarCheckboxCircleIcon}"/>
                    </CheckBox>
                </Grid>

                <TextBlock x:Name="TitleTextBlock" Style="{DynamicResource CheckemTextBlock.Base}" VerticalAlignment="Center" Margin="70,0,55,0" FontSize="20" Text="{Binding Path=Title,Mode=TwoWay}" Foreground="{DynamicResource Color.Black}" TextAlignment="Left"/>

                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon x:Name="ReminderIcon" Kind="Bell" Margin="70,0,0,7.5" Width="20" Height="20" Foreground="#FFE3F321" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Name="ReminderDetailTextBlock" Style="{DynamicResource CheckemTextBlock.Base}" VerticalAlignment="Bottom" Margin="95,0,55,6" FontSize="14" Height="20" Text="Due date..." Foreground="{DynamicResource Color.Black}" TextAlignment="Left"/>
                </StackPanel>

                <!--<TextBlock x:Name="ProgressIndicator" Text="56%" Margin="0,0,55,1.6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="30" TextAlignment="Center" FontFamily="Quicksand"/>
            <ProgressBar x:Name="ProgressBar" Style="{StaticResource MaterialDesignCircularProgressBar}" Height="30" Margin="0,3,55,16.6" Value="70" Foreground="#FF2196F3" BorderBrush="{x:Null}" Background="{x:Null}" Width="30" HorizontalAlignment="Right" VerticalAlignment="Center"/>-->

                <ToggleButton x:Name="StarToggle" Style="{DynamicResource ItembarStarToggle}" ToolTip="Mark As Important" Width="45" Height="45" VerticalAlignment="Center">
                    <ToggleButton.Content>
                        <materialDesign:PackIcon x:Name="StarButtonStarBorderIcon" Style="{DynamicResource StarBorderIcon}"/>
                    </ToggleButton.Content>

                    <materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon x:Name="StarButtonStarIcon" Style="{DynamicResource StarIcon}"/>
                    </materialDesign:ToggleButtonAssist.OnContent>
                </ToggleButton>
            </Grid>
        </Border>
    </Grid>
</UserControl>
