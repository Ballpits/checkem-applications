<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Focus visual-->
    <!--#region White focus visual-->
    <Style x:Key="CheckemFocusVisual.White">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="0" StrokeThickness="3" Stroke="{DynamicResource Color.White}" RadiusX="5" RadiusY="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Black focus visual-->
    <Style x:Key="CheckemFocusVisual.Black">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="0" StrokeThickness="3" Stroke="{DynamicResource Color.Black}" RadiusX="5" RadiusY="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->


    <!--#region Scrollbar style-->
    <!--#region Scroll thumb-->
    <Style x:Key="CheckemScrollThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="6" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="11" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Scroll bar-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />

        <Setter Property="Foreground" Value="{DynamicResource Color.Gray}" />
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Width" Value="10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="20" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource CheckemScrollThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->


    <!--#region Button style-->
    <!--#region Button border-->
    <Style x:Key="BaseButtonBorder" TargetType="Border">
        <Setter Property="Padding" Value="10,0,10,0"/>
    </Style>
    <!--#endregion-->
    
    <!--#region Flat button-->
    <!--#region Square flat button-->
    <Style x:Key="CheckemFlatButton.Square" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=Color.White}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=Color.Black}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>

        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Style="{StaticResource BaseButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=TransparentHighlightColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Rounded edge flat button-->
    <Style x:Key="CheckemFlatButton.Round5" TargetType="Button" BasedOn="{StaticResource CheckemFlatButton.Square}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckemFlatButton.Round10" TargetType="Button" BasedOn="{StaticResource CheckemFlatButton.Square}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" Style="{StaticResource BaseButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckemFlatButton.Round20" TargetType="Button" BasedOn="{StaticResource CheckemFlatButton.Square}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}" Style="{StaticResource BaseButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Circle flat button-->
    <Style x:Key="CheckemFlatButton.Circle" TargetType="Button" BasedOn="{StaticResource CheckemFlatButton.Square}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="100" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Chrome button-->
    <!--#region Normal chrome button-->
    <Style x:Key="CheckemChromeButton" TargetType="Button" BasedOn="{StaticResource CheckemFlatButton.Square}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=Color.WhiteSmoke}"/>

        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="20"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=Color.White}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region X chrome button-->
    <Style x:Key="CheckemChromeXButton" TargetType="Button" BasedOn="{StaticResource CheckemChromeButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Gradient button-->
    <Style x:Key="ColorPickerButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="-90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="{x:Null}"/>

        <Setter Property="Height" Value="80"/>
        <Setter Property="Width" Value="Auto"/>

        <Setter Property="Margin" Value="10,10,10,0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    <!--#endregion-->


    <!--#region Textblock style-->
    <!--#region Base style-->
    <Style x:Key="CheckemTextBlock.Base" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center"/>

        <Setter Property="Padding" Value="0,0,0,0"/>

        <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=Quicksand}"/>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    
    <!--#region TextBox style-->
    <Style x:Key="TextBox.Animated" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFilledTextFieldTextBox}">
        <Setter Property="CaretBrush" Value="{DynamicResource Color.Primary}"/>

        <Setter Property="Foreground" Value="{DynamicResource Color.Black}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Margin" Value="10,20,10,0"/>
    </Style>
    <!--#endregion-->
    
    
    <!--#region LanguageBox-->
    <Style x:Key="LanguageBoxStackPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style x:Key="LanguageBoxStackPanelText" TargetType="StackPanel">
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style x:Key="LanguageBoxImages" TargetType="Image">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="22"/>
    </Style>

    <Style x:Key="LanguageBoxText-Big" TargetType="TextBlock" BasedOn="{StaticResource CheckemTextBlock.Base}">
        <Setter Property="Foreground" Value="{DynamicResource Color.Black}"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="LanguageBoxText-Small" TargetType="TextBlock" BasedOn="{StaticResource CheckemTextBlock.Base}">
        <Setter Property="Foreground" Value="{DynamicResource Color.LightGray}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <!--#endregion-->
</ResourceDictionary>