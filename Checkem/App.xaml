<Application x:Class="Checkem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Checkem"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:Checkem.Properties"
             ShutdownMode="OnExplicitShutdown"
             >

    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>


                <!--#region Material design-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />-->

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Purple.xaml" />
                <!--#endregion-->


                <!--#region Language-->
                <ResourceDictionary Source="Assets/LanguageResourceDictionary/Lng_English_US.xaml"/>
                <!--#endregion-->


                <!--#region Checkem styles-->
                <ResourceDictionary Source="Assets/StyleResourceDictionary/Base/StyleBase.xaml"/>

                <ResourceDictionary Source="Assets/StyleResourceDictionary/NavigationBar.xaml"/>
                <!--#endregion-->


                <!--#region Checkem themes-->
                <ResourceDictionary Source="Assets/ThemeResourceDictionary/Base/ThemeBase.xaml"/>

                <ResourceDictionary Source="Assets/ThemeResourceDictionary/Theme/Light.xaml"/>

                <ResourceDictionary Source="Assets/ThemeResourceDictionary/Color/CheckemDefault.xaml"/>
                <!--#endregion-->


                <!--#region Native resolution scaling-->
                <ResourceDictionary Source="Assets/NativeResolutionScalingDitionary/NRS100.xaml"/>
                <!--#endregion-->


                <!--#region Converter-->
                <ResourceDictionary Source="Assets/ConverterResourceDictionary/ColorConverterDictionary.xaml"/>
                <!--#endregion-->


            </ResourceDictionary.MergedDictionaries>

            <!--#region Tag-->
            <Style x:Key="TagButton" TargetType="Button">
                <!--<Setter Property="Background" Value="White"/>-->
                <Setter Property="BorderBrush" Value="{x:Null}"/>

                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="{DynamicResource Color.Black}"/>
                <Setter Property="FontFamily" Value="Quicksand"/>

                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="Auto"/>

                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="Padding" Value="15,0"/>

                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>

                <Setter Property="TabIndex" Value="8"/>

                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="17" Background="{DynamicResource Color.White}">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->


            <!--#region Itembar-->
            <Style x:Key="ItembarBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource Color.White}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Color.Gray}"/>

                <Setter Property="CornerRadius" Value="5"/>

                <Setter Property="BorderThickness" Value="0"/>

                <Setter Property="Margin" Value="0"/>
            </Style>

            <Style x:Key="CheckboxGrid" TargetType="Grid">
                <Setter Property="Background" Value="#02FFFFFF"/>

                <Setter Property="Width" Value="50"/>

                <Setter Property="HorizontalAlignment" Value="Left"/>

                <Setter Property="Margin" Value="10,0,0,0"/>
            </Style>

            <Style x:Key="ItembarCheckbox" TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignFlatPrimaryToggleButton}">
                <Setter Property="Background" Value="{DynamicResource Color.Primary}"/>
                <Setter Property="Foreground" Value="{DynamicResource Color.Black}"/>

                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ItembarCheckboxCircleIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{DynamicResource Color.Black}"/>

                <Setter Property="Kind" Value="CheckboxBlankCircleOutline"/>

                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>

                <Setter Property="IsTabStop" Value="False"/>
            </Style>

            <Style x:Key="ItembarStarToggle" TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
                <Setter Property="Background" Value="#02FFFFFF"/>

                <Setter Property="Height" Value="45"/>
                <Setter Property="Width" Value="45"/>

                <Setter Property="HorizontalAlignment" Value="Right"/>

                <Setter Property="Margin" Value="0,0,10,0"/>
            </Style>

            <Style x:Key="StarBorderIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{DynamicResource Color.Primary}"/>

                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>

                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>

                <Setter Property="Kind" Value="StarBorder"/>
            </Style>

            <Style x:Key="StarIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{DynamicResource Color.Primary}"/>

                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="25"/>

                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>

                <Setter Property="Kind" Value="Star"/>
            </Style>
            <!--#endregion-->


            <!--#region WindowChrome-->
            <Style x:Key="todoUSCTitlebar" TargetType="Grid">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" MappingMode="RelativeToBoundingBox">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>

                            <GradientStop Color="{DynamicResource PrimaryColor}" Offset="1"/>
                            <GradientStop Color="{DynamicResource SecondaryColor}" Offset="0.352"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

                <Setter Property="Margin" Value="0"/>
            </Style>
            <!--#endregion-->


            <!--#region AppearanceButton-->
            <Style x:Key="ColorPickerButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5" Angle="-90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

                <Setter Property="BorderBrush" Value="{x:Null}"/>

                <Setter Property="Height" Value="80"/>
                <Setter Property="Width" Value="Auto"/>

                <Setter Property="Margin" Value="10,10,10,0"/>
                <Setter Property="Padding" Value="0"/>

                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->

            <!--#region Details panel-->
            <Style x:Key="DetailsPanelButton" TargetType="Button" BasedOn="{StaticResource CheckemFlatButton.Square}">
                <Setter Property="Height" Value="45"/>
                <Setter Property="Width" Value="45"/>
            </Style>
            <!--#endregion-->

            <!--#region LanguageBox-->
            <Style x:Key="LanguageBoxStackPanel" TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal"/>
            </Style>

            <Style x:Key="LanguageBoxStackPanelText" TargetType="StackPanel">
                <Setter Property="Margin" Value="10,0,0,0"/>
            </Style>

            <Style x:Key="LanguageBoxImages" TargetType="Image">
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="22"/>
            </Style>

            <Style x:Key="LanguageBoxText-Big" TargetType="TextBlock" BasedOn="{StaticResource CheckemTextBlock.Base}">
                <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=NormalTextColor,Converter={StaticResource ColorToBrushConverter}}"/>
                <Setter Property="FontSize" Value="20"/>
            </Style>

            <Style x:Key="LanguageBoxText-Small" TargetType="TextBlock" BasedOn="{StaticResource CheckemTextBlock.Base}">
                <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=ItemCompletedTextColor,Converter={StaticResource ColorToBrushConverter}}"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <!--#endregion-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
