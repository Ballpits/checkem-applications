<Application x:Class="ProjectSC.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProjectSC"
             xmlns:local1="clr-namespace:ProjectSC.Functions"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:ProjectSC.Properties"
             ShutdownMode="OnExplicitShutdown">

    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ThemeLight" Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <!--<ResourceDictionary x:Name="ThemeDark" Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Purple.xaml" />

                <ResourceDictionary Source="SharedDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--Scrollbar Thumbs-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ScrollBars-->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="LightGray" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="19" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>

                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#region Navigationbar controls-->
            <Style x:Key="NavigationbarGrid" TargetType="Grid">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="4,1" StartPoint="1,0">
                            <!--<GradientStop Color="{Binding Source={x:Static properties:Settings.Default}, Path=PrimaryColor, Converter={StaticResource ColorToBrushConverter}}" Offset="0"/>
                            <GradientStop Color="{Binding Source={x:Static properties:Settings.Default}, Path=SecondaryColor, Converter={StaticResource ColorToBrushConverter}}" Offset="0.5"/>-->

                            <GradientStop Color="#ffaf7b"/>
                            <GradientStop Color="#3a1c71" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="NavigationbarButton" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinHeight" Value="50"/>
                <Setter Property="MinWidth" Value="50"/>

                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>

                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>

                <!--<Setter Property="Background" Value="#002196F3"/>-->
                <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=NavigationbarButtonColor, Converter={StaticResource ColorToBrushConverter}}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="White"/>

                <Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisual}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=NavigationbarButtonHighlightColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="NavigationbarIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="White"/>

                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinHeight" Value="50"/>
                <Setter Property="MinWidth" Value="50"/>

                <Setter Property="Margin" Value="0"/>

                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="NavigationbarTextBlock" TargetType="TextBlock">
                <Setter Property="TextAlignment" Value="Center"/>

                <Setter Property="FontFamily" Value="Arail"/>

                <Setter Property="Margin" Value="5,0"/>
            </Style>

            <Style x:Key="NavigationbarViewBox" TargetType="Viewbox">
                <Setter Property="Margin" Value="0"/>
            </Style>

            <Style x:Key="NavigationbarButtonGrid" TargetType="Grid">
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinHeight" Value="50"/>
                <Setter Property="MinWidth" Value="50"/>
            </Style>
            <!--#endregion-->

            <Style x:Key="MyFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="0" StrokeThickness="3" Stroke="White" StrokeDashArray="1000"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TagButton" TargetType="Button">
                <!--<Setter Property="Background" Value="White"/>-->
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=NavigationbarTextColor,Converter={StaticResource ColorToBrushConverter}}"/>

                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Width" Value="70"/>

                <Setter Property="HorizontalAlignment" Value="Left"/>

                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="12" Background="White">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#region -->
            <Style x:Key="ItembarBorder" TargetType="Border">
                <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=ItembarColor, Converter={StaticResource ColorToBrushConverter}}"/>

                <Setter Property="CornerRadius" Value="10"/>

                <Setter Property="Margin" Value="0"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{Binding Source={x:Static properties:Settings.Default}, Path=PrimaryColor, Converter={StaticResource ColorToBrushConverter}}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Margin" Value="-2,-2,-2,-2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CheckboxGrid" TargetType="Grid">
                <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=ItembarColor, Converter={StaticResource ColorToBrushConverter}}"/>

                <Setter Property="Width" Value="50"/>

                <Setter Property="HorizontalAlignment" Value="Left"/>

                <Setter Property="Margin" Value="10,0,0,0"/>
            </Style>

            <Style x:Key="ItembarCheckbox" TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignFlatPrimaryToggleButton}">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ItembarCheckboxCircleIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{Binding Source={x:Static properties:Settings.Default}, Path=PrimaryColor, Converter={StaticResource ColorToBrushConverter}}"/>

                <Setter Property="Kind" Value="CheckboxBlankCircleOutline"/>

                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>

                <Setter Property="IsTabStop" Value="False"/>
            </Style>
            <!--#endregion-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
